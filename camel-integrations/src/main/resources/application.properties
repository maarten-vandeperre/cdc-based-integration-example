# Kafka configuration
kafka.bootstrap.servers=my-cluster-kafka-bootstrap.demo-project.svc.cluster.local:9092
camel.component.kafka.brokers=${kafka.bootstrap.servers}

# Quarkus specific configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

tenant_list=tenant_1,tenant_2,tenant_3
camel_route.enrich_contracts.in_uri_string_template=kafka:legacydatachanged.%s.contracts?brokers=${kafka.bootstrap.servers}
%test.camel_route.enrich_contracts.in_uri_string_template=direct:kafkamock.legacydatachanged.%s.contracts
camel_route.enrich_contracts.out_uri_string_template=kafka:enriched_data?brokers=${kafka.bootstrap.servers}
%test.camel_route.enrich_contracts.out_uri_string_template=mock:result_enrich_contracts

camel_route.people_service.process.postgres_service=integration-database.demo-project.svc.cluster.local
%dev.camel_route.people_service.process.postgres_service=localhost

mongo-connection-url=mongodb://mongo:mongo@aggregation-database.demo-project.svc.cluster.local:27017/?authSource=admin
%test.mongo-connection-url=mongodb://should-not-be-used
camel_route.mongo_store.in_uri_string_template=kafka:enriched_data?brokers=${kafka.bootstrap.servers}
%test.camel_route.mongo_store.in_uri_string_template=direct:kafkamock.enriched_data


# feature/integration flags
feature.flag.camel_routes.mongo_query.enabled=false
feature.flag.camel_routes.postgres_query.enabled=false
feature.flag.camel_routes.postgres.enabled=false

quarkus.jmx.enabled=true

quarkus.http.auth.basic=true
quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.plain-text=true

# Define the users and roles - user admin with pwd admin_password
quarkus.security.users.embedded.users.admin=admin_password
quarkus.security.users.embedded.roles.admin=admin
hawtio.authenticationEnabled=true
hawtio.role=admin
