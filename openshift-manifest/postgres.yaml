apiVersion: v1
kind: ConfigMap
metadata:
  name: master-data-postgres-init-script
  namespace: integration-project
data:
  init.sql: |
    ALTER SYSTEM SET wal_level = 'logical';
    
    CREATE TABLE addresses
    (
        id           serial PRIMARY KEY,
        ref          VARCHAR(50) UNIQUE NOT NULL,
        address_line1 VARCHAR(250)       NOT NULL,
        address_line2 VARCHAR(250)       NOT NULL,
        address_line3 VARCHAR(250),
        country_code VARCHAR(10)        NOT NULL
    );
    
    INSERT INTO addresses (ref, address_line1, address_line2, address_line3, country_code)
    VALUES ('925a7e8e-8b13-429c-80ed-9ae2f788b3dc', 'Leonardo Da Vinci Laan 27', '9000 Gent', null, 'BE');
    
    CREATE TABLE people
    (
        id         serial PRIMARY KEY,
        ref        VARCHAR(50) UNIQUE NOT NULL,
        address    INTEGER,
        first_name VARCHAR(50)        NOT NULL,
        last_name  VARCHAR(50)        NOT NULL,
        birth_date VARCHAR(10),
        CONSTRAINT fk_address FOREIGN KEY (address) REFERENCES addresses (id)
    );

    INSERT INTO people (ref, address, first_name, last_name, birth_date)
    VALUES ('13ed6a67-a4c4-4307-85da-2accbcf25aa7',
            (select id from addresses where ref = '925a7e8e-8b13-429c-80ed-9ae2f788b3dc'),
            'Maarten', 'Vandeperre', '17/04/1989');
---
apiVersion: v1
kind: Secret
metadata:
  name: master-data-db-secret
  namespace: integration-project
type: Opaque
data:
  password: YXZlcnlzZWN1cmVwYXNzd29yZA== # averysecurepassword
  username: aW50ZWdyYXRpb24= # integration
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: master-data-postgres-pvc
  namespace: integration-project
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: master-data-postgres
  namespace: integration-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: master-data-postgres
  template:
    metadata:
      labels:
        app: master-data-postgres
    spec:
#      initContainers:
#        - name: init-db
#          image: postgres:13
#          command: [ "sh", "-c", "PGPASSWORD=averysecurepassword psql -h localhost -U integration -d integration -f /init/init.sql" ]
#          volumeMounts:
#            - name: init-script
#              mountPath: /init
      containers:
        - name: postgres
          image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: PGDATA
              value: /data/pgdata
            - name: POSTGRES_DB
              value: integration
            - name: POSTGRES_USER
              value: integration
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: master-data-db-secret
                  key: password
            - name: POSTGRES_EXTRA_CONFIG
              value: |
                wal_level = logical
                max_wal_senders = 4
                max_replication_slots = 4
          volumeMounts:
            - name: postgres-storage
              mountPath: /data
              subPath: postgres-data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: master-data-postgres-pvc
        - name: init-script
          configMap:
            name: master-data-postgres-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: master-data-postgres
  namespace: integration-project
spec:
  selector:
    app: master-data-postgres
  type: LoadBalancer
  ports:
    - port: 5432
      targetPort: 5432